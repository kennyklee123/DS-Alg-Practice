class Solution {
    /*
    This use https://en.wikipedia.org/wiki/Lagrange%27s_four-square_theorem
    bottom up approach
    https://www.youtube.com/watch?v=9B7LxbuD7Aw
     its loike the coin problem
     we take the min of dp[i] which should have already been calculated, or  dp[i-j*j] +1 which represents if we took a smaller square and then took the value of whatever wa sleft over
     EX: 13 -> 4+ 9 = 2, 
    */
    public int numSquares(int n) {
        if(n < 4) return n;
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MAX_VALUE);
        dp[0] = 0; dp[1] = 1; dp[2] = 2; dp[3] = 3;
        
        for(int i = 4; i <= n; i++) 
            for(int j = 1; j * j <= i; j++)
                dp[i] = Math.min(dp[i], dp[i - j * j] + 1);
        
        return dp[n];
    }
}