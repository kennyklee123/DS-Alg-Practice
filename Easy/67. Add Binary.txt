class Solution {
    public String addBinary(String a, String b) {
       StringBuilder sb = new StringBuilder(); //Google immutability or string vs stringbuilder if you don't know why we use this instead of regular string
        int i = a.length() - 1, j = b.length() -1, carry = 0; //two pointers starting from the back, just think of adding two regular ints from you add from back
        
        while (i >= 0 || j >= 0) {
            
            int sum = carry; //if there is a carry from the last addition, add it to carry 
            //doing j--/i-- in the if statement is the same as doing j--; i--; at the end of the while loo
            p
            if (j >= 0) 
               sum += b.charAt(j--) - '0'; //we subtract '0' to get the int value of the char from the ascii
            if (i >= 0)
                sum += a.charAt(i--) - '0';
            
            sb.append(sum % 2); //if our sum is 2 or 0 we append 0, else we append 1 which the % does for us
            carry = sum / 2; // our sum is == 2, we have a carry
        }
        if (carry != 0) sb.append(carry); //leftover carry, add it
        
        return sb.reverse().toString();//we reverse it since we started building the string from right to left
        
    }
    
}
      